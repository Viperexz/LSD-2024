package grsaa.sop_corba;


/**
* grsaa/sop_corba/_GestionDispositivosStub.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from gesdispositivos.idl
* domingo 2 de junio de 2024 08:21:24 PM COT
*/

public class _GestionDispositivosStub extends org.omg.CORBA.portable.ObjectImpl implements grsaa.sop_corba.GestionDispositivos
{

  public void notificacionmms (grsaa.sop_corba.GestionDispositivosPackage.notificacionDTO objNotificacion)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("notificacionmms", true);
                grsaa.sop_corba.GestionDispositivosPackage.notificacionDTOHelper.write ($out, objNotificacion);
                $in = _invoke ($out);
                return;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                notificacionmms (objNotificacion        );
            } finally {
                _releaseReply ($in);
            }
  } // notificacionmms

  public int lectura (grsaa.sop_corba.GestionDispositivosPackage.Lectura_DTO objLectura)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("lectura", true);
                grsaa.sop_corba.GestionDispositivosPackage.Lectura_DTOHelper.write ($out, objLectura);
                $in = _invoke ($out);
                int $result = $in.read_long ();
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return lectura (objLectura        );
            } finally {
                _releaseReply ($in);
            }
  } // lectura

  public double recuperarFactura (String IdTu, grsaa.sop_corba.GestionDispositivosPackage.Factura_DTOHolder objFactura)
  {
            org.omg.CORBA.portable.InputStream $in = null;
            try {
                org.omg.CORBA.portable.OutputStream $out = _request ("recuperarFactura", true);
                $out.write_string (IdTu);
                $in = _invoke ($out);
                double $result = $in.read_double ();
                objFactura.value = grsaa.sop_corba.GestionDispositivosPackage.Factura_DTOHelper.read ($in);
                return $result;
            } catch (org.omg.CORBA.portable.ApplicationException $ex) {
                $in = $ex.getInputStream ();
                String _id = $ex.getId ();
                throw new org.omg.CORBA.MARSHAL (_id);
            } catch (org.omg.CORBA.portable.RemarshalException $rm) {
                return recuperarFactura (IdTu, objFactura        );
            } finally {
                _releaseReply ($in);
            }
  } // recuperarFactura

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:sop_corba/GestionDispositivos:1.0"};

  public String[] _ids ()
  {
    return (String[])__ids.clone ();
  }

  private void readObject (java.io.ObjectInputStream s) throws java.io.IOException
  {
     String str = s.readUTF ();
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     org.omg.CORBA.Object obj = orb.string_to_object (str);
     org.omg.CORBA.portable.Delegate delegate = ((org.omg.CORBA.portable.ObjectImpl) obj)._get_delegate ();
     _set_delegate (delegate);
   } finally {
     orb.destroy() ;
   }
  }

  private void writeObject (java.io.ObjectOutputStream s) throws java.io.IOException
  {
     String[] args = null;
     java.util.Properties props = null;
     org.omg.CORBA.ORB orb = org.omg.CORBA.ORB.init (args, props);
   try {
     String str = orb.object_to_string (this);
     s.writeUTF (str);
   } finally {
     orb.destroy() ;
   }
  }
} // class _GestionDispositivosStub
